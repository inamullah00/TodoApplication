 @model List<ToDo.Presentation.ViewModels.Item.ItemResponseViewModel>


<div class="accordion" id="accordionExample">
    @foreach (var item in Model)
    {
        <div class="accordion-item" id="todo-@item.Id">
            <h2 class="accordion-header" id="heading-@item.Id">
                <button class="accordion-button @(!item.IsComplete ? "collapsed" : "")" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@item.Id" aria-expanded="false" aria-controls="collapse-@item.Id">
                    @item.Title
                </button>
            </h2>
            <div id="collapse-@item.Id" class="accordion-collapse collapse @(item.IsComplete ? "show" : "")" aria-labelledby="heading-@item.Id" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <strong>Description:</strong> @item.Description <br />
                    <strong>Priority:</strong> @item.Priority <br />
                    <strong>Due Date:</strong> @item.DueDate?.ToString("MM/dd/yyyy") <br />
                    <strong>Status:</strong> @(item.IsComplete ? "Completed" : "Pending") <br />

                    <div class="mt-4">
                        <button type="button" class="btn btn-secondary add-comment-btn" data-id="@item.Id">Add Comment</button>
                        <button type="button" class="btn btn-secondary share-btn" data-id="@item.Id">Share</button>
                        <button type="button" class="btn btn-secondary edit-btn" data-id="@item.Id">Edit</button>
                        <button type="button" class="btn btn-danger delete-btn" data-id="@item.Id">Delete</button>


                           <!-- Comment Icon to View Comments -->
                      <button  type="button" 
                            class="btn btn-info view-comments-btn" 
                            onclick="window.location.href='/Comment/GetComments/@item.Id'">
                       <i class="bi bi-chat-left-text"></i> View Comments
                     </button>



                      <!-- Hidden Comment Form -->
                        <div class="comment-form mt-3" id="comment-form-@item.Id" style="display: none;">
                            <form asp-action="AddComment" asp-controller="Comment" method="post">
                                <input type="hidden" name="TodoItemId" value="@item.Id" />
                                <textarea name="Comment" class="form-control mb-2" rows="3" placeholder="Enter your comment"></textarea>
                                <button type="submit" class="btn btn-primary">Submit Comment</button>
                                <button type="button" class="btn btn-secondary cancel-comment-btn">Cancel</button>
                            </form>
                        </div>

                        <!-- Hidden share form -->
                        <div class="share-form mt-3" id="share-form-@item.Id" style="display: none;">
                            <input type="email" class="form-control mb-2" placeholder="Enter recipient's email" />
                            <button type="button" class="btn btn-primary submit-share-btn" data-id="@item.Id">Share</button>
                            <button type="button" class="btn btn-secondary cancel-share-btn">Cancel</button>
                        </div>



                  <!-- Edit Form -->
                    <form class="edit-form" style="display: none;">
                        <input type="hidden" name="Id" value="@item.Id" />

                        <!-- Title -->
                        <input type="text" name="Title" class="form-control mb-2" value="@item.Title" placeholder="Edit title" required />

                        <!-- Description -->
                        <textarea name="Description" class="form-control mb-2" rows="3" placeholder="Edit description" required>@item.Description</textarea>

                        <!-- Priority Dropdown -->
                      <select name="Priority" class="form-control mb-2" required>
                        @if (item.Priority == "Low")
                        {
                            <option value="Low" selected>Low</option>
                        }
                        else
                        {
                            <option value="Low">Low</option>
                        }
                        @if (item.Priority == "Medium")
                        {
                            <option value="Medium" selected>Medium</option>
                        }
                        else
                        {
                            <option value="Medium">Medium</option>
                        }
                        @if (item.Priority == "High")
                        {
                            <option value="High" selected>High</option>
                        }
                        else
                        {
                            <option value="High">High</option>
                        }
                       </select>


                        <!-- Due Date -->
                        <input type="date" name="DueDate" class="form-control mb-2" value="@item.DueDate?.ToString("yyyy-MM-dd")" required />

                        <!-- IsComplete Checkbox -->
                        <div class="form-check mb-2">
                            <input type="checkbox" name="IsComplete" class="form-check-input" id="isComplete-@item.Id" @(item.IsComplete ? "checked" : "") />
                            <label class="form-check-label" for="isComplete-@item.Id">Mark as Complete</label>
                        </div>

                        <!-- UserId -->
                        <input type="hidden" name="UserId" value="@item.UserId" />

                        <!-- Buttons -->
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <button type="button" class="btn btn-secondary cancel-edit-btn">Cancel</button>
                    </form>




                    </div>
                </div>
            </div>
        </div>

      
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Delete Todo Item
            $(document).on('click', '.delete-btn', function () {
                const itemId = $(this).data('id'); // Get the ID from the data-id attribute

                if (confirm('Are you sure you want to delete this item?')) {
                    $.ajax({
                        url: `/Home/DeleteTodoItem/${itemId}`, // API endpoint
                        type: 'DELETE', // HTTP method
                        success: function (response) {
                            // Remove the deleted item from the DOM
                            $(`#todo-${itemId}`).remove();
                            alert('Item deleted successfully!');
                        },
                        error: function (xhr, status, error) {
                            alert('Failed to delete the item. Please try again.');
                        }
                    });
                }
            });

            //-------------- >  Show the comment form

            $(document).on('click', '.add-comment-btn', function () {
                const itemId = $(this).data('id');
                $(`#comment-form-${itemId}`).slideDown(); // Show the comment form with animation
            });

            // Hide the comment form
            $(document).on('click', '.cancel-comment-btn', function () {
                $(this).closest('.comment-form').slideUp(); // Hide the comment form with animation
            });

          

            // Show the edit form
            $(document).on('click', '.edit-btn', function () {
                const itemId = $(this).data('id');
              
                $(`.edit-form`).slideDown();
            });

            // Hide the edit form
            $(document).on('click', '.cancel-edit-btn', function () {
                $(this).closest('.edit-form').slideUp();
            });

         
    // Use button click event to trigger the form submission
                $(document).on('submit', '.edit-form', function (e) {
                e.preventDefault(); // Prevent default form submission

                const form = $(this); // Reference to the form being submitted
                const itemId = form.find("input[name='Id']").val(); // Extract the ID from the form

                // Create an object to hold form data
                const formData = {};

                // Serialize the form data to a JavaScript object
                form.serializeArray().forEach(function (field) {
                    formData[field.name] = field.value; // Add the field name and value to the object
                });

                // Handle checkbox (IsComplete) separately, since it's a boolean
                formData['IsComplete'] = form.find("input[name='IsComplete']").is(":checked");

                // Log the formData for debugging
                console.log("Serialized Form Data:", formData);

                // Send the data as a JSON object in the AJAX request
                $.ajax({
                    url: `/Home/UpdateItem/${itemId}`, // Adjust the URL as necessary
                    type: 'PUT',
                    contentType: 'application/json', // Ensure the request content type is JSON
                    data: JSON.stringify(formData), // Convert formData to JSON string
                    success: function (response) {
                       
                        location.reload(); // Reload the page to reflect changes
                    },
                    error: function (xhr, status, error) {
                 
                        console.error("Error:", xhr.responseText);
                    }
                });
            });
        








            // Show the share form
            $(document).on('click', '.share-btn', function () {
                const itemId = $(this).data('id');
                $(`#share-form-${itemId}`).slideDown(); // Show the share form
            });

            // Hide the share form
            $(document).on('click', '.cancel-share-btn', function () {
                $(this).closest('.share-form').slideUp(); // Hide the share form
            });

            // Submit the share request
            $(document).on('click', '.submit-share-btn', function () {
                const itemId = $(this).data('id');
                const recipientEmail = $(this).siblings('input[type="email"]').val(); // Get the recipient's email

                if (recipientEmail.trim() === '') {
                    alert('Recipient email cannot be empty.');
                    return;
                }

                $.ajax({
                    url: `/Home/ShareTodoItem/${itemId}`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ email: recipientEmail }),
                    success: function () {
                        
                        alert('Item shared successfully!');
                        $(`#share-form-${itemId}`).slideUp(); // Hide the share form
                    },
                    error: function () {
                        alert('Failed to share the item. Please try again.');
                    }
                });
            });


        });

    </script>
}

 




